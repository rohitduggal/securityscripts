AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation for Nerve Cloud Security (Base-Inspector)
Resources:

  InspectorInitialize:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: InspectorInitialize.lambda_handler
      FunctionName: InspectorInitialize
      Role: !ImportValue
        'Fn::Sub': 'nssRoleArn-${AWS::AccountId}-${AWS::Region}'
      Code:
        S3Bucket: !Join 
          - '-'
          - - nss
            - !Ref 'AWS::AccountId'
            - !Ref 'AWS::Region'
        S3Key: 'lambda/InspectorInitialize/InspectorInitialize.zip'
      Runtime: python2.7
      Timeout: '300'
  MyCustomResource:
    Type: 'Custom::ExecuteLambdaFn'
    Properties:
      ServiceToken: !GetAtt 
        - InspectorInitialize
        - Arn
    DependsOn: InspectorInitialize
  InspectorAssessmentRun:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Join 
          - '-'
          - - nss
            - !Ref 'AWS::AccountId'
            - !Ref 'AWS::Region'
        S3Key: 'lambda/InspectorAssessmentRun/InspectorAssessmentRun.zip'
      Description: Schedules a recurring Amazon Inspector assessment run
      Environment:
        Variables:
          assessmentTemplateArn: !GetAtt 
            - MyCustomResource
            - assessmentTemplateArn
      FunctionName: InspectorAssessmentRun
      Handler: InspectorAssessmentRun.handler
      Role: !ImportValue
        'Fn::Sub': 'nssRoleArn-${AWS::AccountId}-${AWS::Region}'
      Runtime: nodejs4.3
      Timeout: '300'
    DependsOn: MyCustomResource
  WeeklyInspectorAssessmentRun:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: This event is to schedule Inspector Assessment Run once every week
      Name: WeeklyInspectorAssessmentRun
      ScheduleExpression: cron(0 0 ? * SUN *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt 
            - InspectorAssessmentRun
            - Arn
          Id: InspectorAssessmentRun
    DependsOn: InspectorAssessmentRun
  PermissionForEventsToInvokeLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref InspectorAssessmentRun
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 
        - WeeklyInspectorAssessmentRun
        - Arn
    DependsOn: WeeklyInspectorAssessmentRun
  InspectorReporting:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Join 
          - '-'
          - - nss
            - !Ref 'AWS::AccountId'
            - !Ref 'AWS::Region'
        S3Key: 'lambda/InspectorReporting/InspectorReporting.zip'
      Description: This function send AWS Inspector status/reports to Sumologic
      FunctionName: InspectorReporting
      Handler: InspectorReporting.sumo_inspector_handler
      Role: !ImportValue
        'Fn::Sub': 'nssRoleArn-${AWS::AccountId}-${AWS::Region}'
      Runtime: python2.7
      Timeout: '300'
    DependsOn: PermissionForEventsToInvokeLambda
  InspectorReportingLambdaResourcePolicy:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt 
        - InspectorReporting
        - Arn
      Principal: sns.amazonaws.com
      Action: 'lambda:InvokeFunction'
      SourceArn: !GetAtt 
        - MyCustomResource
        - SumoInspectorSNSTopic
    DependsOn: InspectorReporting
  SecurityInspectorTopicSubscribe:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !GetAtt 
        - InspectorReporting
        - Arn
      Protocol: lambda
      TopicArn: !GetAtt 
        - MyCustomResource
        - SumoInspectorSNSTopic
    DependsOn: InspectorReportingLambdaResourcePolicy
  NotifyNerveSecurity:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Join 
          - '-'
          - - nss
            - !Ref 'AWS::AccountId'
            - !Ref 'AWS::Region'
        S3Key: 'lambda/NotifyNerveSecurity/NotifyNerveSecurity.zip'
      Description: >-
        This function send detailed Inpsector Assessment report to
        Nerve-Security team
      FunctionName: NotifyNerveSecurity
      Handler: NotifyNerveSecurity.lambda_handler
      Role: !ImportValue
        'Fn::Sub': 'nssRoleArn-${AWS::AccountId}-${AWS::Region}'
      Runtime: python2.7
      Timeout: '300'
    DependsOn: SecurityInspectorTopicSubscribe
  NotifyInspectorSNSPermit:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt 
        - NotifyNerveSecurity
        - Arn
      Principal: sns.amazonaws.com
      Action: 'lambda:InvokeFunction'
      SourceArn: !GetAtt 
        - MyCustomResource
        - NerveSecNotify
    DependsOn: NotifyNerveSecurity
  NotifyInspectorSNSsettings:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !GetAtt 
        - NotifyNerveSecurity
        - Arn
      Protocol: lambda
      TopicArn: !GetAtt 
        - MyCustomResource
        - NerveSecNotify
    DependsOn: NotifyInspectorSNSPermit
